/*3. Să se scrie o aplicaţie C, care alocă dinamic memorie pentru stocarea elementelor a două matrici de "m" linii şi "n" coloane.
Să se scrie o funcţie care calculează suma celor două matrici şi o funcţie pentru aﬁşarea unei matrici.
Să se aﬁşeze matricile iniţiale şi matricea obţinută. */
/*GREU DAN IOAN*/
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
void suma(int*, int*,int,int,int*);
void afisare(int*,int*,int*,int,int);
int main()
{
	int  n,m,*p,*k,s=0,*z;
	printf("Introduceti numarul de linii\n");
	scanf("%i", &m);
	printf("Introduceti numarul de coloane\n");
	scanf("%i", &n);
	z = (int*)malloc(m*n*sizeof(int));
	p = (int*)malloc(m*n * sizeof(int));
	k = (int*)malloc(m*n * sizeof(int));
	suma(p, k, m, n, z);
	afisare(p,z,k,m,n);
	return 0;
	/*2019*/
}

void suma(int* p, int* k, int m, int n,int*z)
{
	printf("Elementele din matrcea 1\n");
	for (int i = 0; i < m; i++)
		for (int j = 0; j < n; j++)
			scanf("%i", (p + i*n + j));
	printf("Elementele din matrcea 2\n");
	for (int i = 0; i < m; i++) {
		for (int j = 0; j < n; j++)
		{
			scanf("%i", (k + i * n + j));
			*(z + i * n + j) = *(p + i * n + j) + *(k + i * n + j);
			
		}
	}
	
}
void afisare(int* z,int*k,int*p,int m,int n)
{
	printf("Matricea initala 1:\n");
	for (int i = 0; i < m; i++) {
		printf("\n");
		for (int j = 0; j < n; j++)
		{
			printf("%i ", *(z + i * n + j));
		}
	}
	printf("\nMatricea initala 2:\n");
	{
		for (int i = 0; i < m; i++) {
			printf("\n");
			for (int j = 0; j < n; j++)
			{
				printf("%i ", *(p + i * n + j));
			}
		}
	}
	printf("\n");
	printf("Matricea suma este:\n");
	for (int i = 0; i < m; i++) {
		printf("\n");
		for (int j = 0; j < n; j++)
		{
			printf("%i ", *(k + i * n + j));
		}
	}
}