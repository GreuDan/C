/*4. Să se scrie o aplicaţie în care se generează aleator 20 de numere întregi cu valori mai mici decât 50 (Folositi srand(), rand() si operatorul %).
Să se scrie o funcţie care elimină din tabloul unidimensional creat numerele impare.
Funcţia va utiliza pointeri. Aﬁşati în main() tabloul iniţial şi cel obţinut după eliminarea elementelor impare. */
/*GREU  DAN  IOAN*/
#define  _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
void vectori(int* p);
void vectorimpar(int* p, int* k, int& ok);
int  main()
{
	int  nr = 0, ok = 0, v[100], a[100], * p, * k;
	p = v;
	vectori(p);
	printf("Vectorul generat este:");
	for (int i = 0; i < 20; i++)
	{
		printf("%i ", *(p + i));
	}
	k = a;
	vectorimpar(p, k, ok);
	printf("\nNoul vector este:");
	for (int i = 0; i < ok; i++)
		printf("%i ", *(k + i));
	return 0;
	/*2019*/

}
void vectori(int* p)
{
	int nr = 0;
	srand((int)time(0));
	for (int i = 0; i < 50; i++)
	{
		*(p + nr) = rand() % 50 + 0;
		nr++;
		if (nr == 20) break;
	}
}
void vectorimpar(int* p, int* k, int& ok)
{
	for (int i = 0; i < 20; i++)
	{
		if (*(p + i) % 2 == 0)
		{
			*(k + ok) = *(p + i);
			ok++;
		}

	}
}